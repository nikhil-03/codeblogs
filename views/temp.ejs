<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Search Questions</title>
</head>
<body>
    <form class="search-form">
        <input type="text" class="search" placeholder="Tags or Questions">
        <ul class="suggestions">
          <li>Filter for a topic</li>
          <li>or the question</li>
        </ul>
      </form>
</body>
</html>
<style>
 html {
  box-sizing: border-box;
  background: #393e46;
  font-family: 'helvetica neue';
  font-size: 20px;
  font-weight: 200;
}

*, *:before, *:after {
  box-sizing: inherit;
}

input {
  width: 100%;
  padding: 20px;
}

.search-form {
  max-width: 400px;
  margin: 50px auto;
}

input.search {
  margin: 0;
  text-align: center;
  outline: 0;
  border: 10px solid #F7F7F7;
  width: 120%;
  left: -10%;
  position: relative;
  top: 10px;
  z-index: 2;
  border-radius: 5px;
  font-size: 40px;
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.12), inset 0 0 2px rgba(0, 0, 0, 0.19);
}

.suggestions {
  margin: 0;
  padding: 0;
  position: relative;
  /*perspective: 20px;*/
}

.suggestions li {
  background: white;
  list-style: none;
  border-bottom: 1px solid #687980;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.14);
  margin: 0;
  padding: 20px;
  transition: background 0.2s;
  display: flex;
  justify-content: space-between;
  text-transform: capitalize;
}

.suggestions li:nth-child(even) {
  transform: perspective(100px) rotateX(3deg) translateY(2px) scale(1.001);
  background: linear-gradient(to bottom,  #ffffff 0%,#EFEFEF 100%);
}

.suggestions li:nth-child(odd) {
  transform: perspective(100px) rotateX(-3deg) translateY(3px);
  background: linear-gradient(to top,  #ffffff 0%,#EFEFEF 100%);
}

span.population {
  font-size: 15px;
}

.hl {
  background: #ffc600 ;
}
a
{
  color: black;
  text-decoration: none;
}
a:active
{
  color: black;
}

</style>
<script>
     const test = <%- JSON.stringify(question) %>;
     const questions = [];
     questions.push(...test);
    
  
   function findMatches(wordMatch , questions)
   {
     return questions.filter(question=>{
       const regex = RegExp(wordMatch,'gi');
       return question.tag.match(regex) || question.explanation.match(regex) ||
        question.difficult.match(regex);
     });
   }
   function numberWithCommas(x) {
  return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
}
  function displayMatches()
  {
    const matchArray = findMatches(this.value, questions);
    // console.log(matchArray);
    const html = matchArray.map(question=>{
      const regex=new RegExp(this.value,'gi');
      const tags=question.tag.replace(regex,`<span class="hl">${this.value}</span>`);
      const explanationName=question.explanation.replace(regex,`<span class="hl">${this.value}</span>`);
      return `
       
        <li> 
          <a href="/level3/wes-search/${question._id}"
         <span class="name">${tags}=>${explanationName}</span>
         <span class="population">${numberWithCommas(question.difficult)}</span>
         >
      </li>
      
      `;
    }).join('');
    suggestions.innerHTML=html;
  }
 

  const searchInput = document.querySelector('.search');
  const suggestions = document.querySelector('.suggestions');

  searchInput.addEventListener('change',displayMatches);
  searchInput.addEventListener('keyup',displayMatches);


</script>